import{a as U}from"./chunk-PHYFXUJK.js";import{a as M,b as S}from"./chunk-YASA3IIA.js";import{a as _,b as B,c as P,d as I,f as H,g as T,h as O,i as R}from"./chunk-CGA2LBAP.js";import{a as b,b as F}from"./chunk-MKM3VJU6.js";import{Ca as w,Ja as n,M as f,Na as v,Oa as l,Pa as s,Qa as u,Tb as E,Ub as C,Vb as D,Yb as L,ca as y,eb as x,fa as k,ia as a,ja as h,pa as i,va as t,wa as e,xa as o}from"./chunk-W5W2SBVR.js";var Z=(()=>{let p=class p{constructor(d,r){this.elementRef=d,this.rawLoaderService=r,this.demoPython$=this.rawLoaderService.get("app/bindings/remote/demo.py"),this.markdown='### Markdown example\n---\nThis is an **example** where we bind a variable to the `markdown` component that is also bound to a textarea.\n\n#### example.component.ts\n```typescript\npublic markdown = "# Markdown";\n```\n\n#### example.component.html\n```html\n<textarea [(ngModel)]="markdown"></textarea>\n<markdown [data]="markdown"></markdown>\n```',this.typescriptMarkdown=`import { Component } from '@angular/core';

@Component({
  selector: 'markdown-demo',
  templateUrl: './markdown-demo.component.html',
  styleUrls: ['./markdown-demo.component.scss'],
})
export class MarkdownDemoComponent {
  public pipeMarkdown = '# Markdown';
}`}ngOnInit(){this.setHeadings()}setHeadings(){let d=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach(r=>d.push(r)),this.headings=d}};p.\u0275fac=function(r){return new(r||p)(h(k),h(U))},p.\u0275cmp=f({type:p,selectors:[["app-bindings"]],standalone:!0,features:[v],decls:47,vars:23,consts:[[3,"headings"],["id","remote-url"],[3,"src"],[3,"data"],["markdown","",3,"src"],["id","variable-binding"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModel","ngModelChange"],["fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["id","pipe-usage"],["fxFlex.gt-sm","calc(50% - 8px)",3,"innerHTML"]],template:function(r,m){r&1&&(t(0,"app-scrollspy-nav-layout",0)(1,"h1"),n(2,"Bindings"),e(),t(3,"section")(4,"h2",1),n(5,"Remote Url"),e(),t(6,"markdown"),n(7," Using component with `src` property to fetch remote markdown file `app/bindings/remote/demo.md` "),e(),o(8,"markdown",2),t(9,"markdown"),n(10," Using component with static `python` code block "),e(),o(11,"markdown",3),l(12,"language"),l(13,"async"),t(14,"markdown"),n(15," Using directive with `src` property to fetch remote html file `app/bindings/remote/demo.html` "),e(),o(16,"div",4),t(17,"markdown"),n(18," Using directive with `src` property to fetch remote C++ file `app/bindings/remote/demo.cpp` "),e(),o(19,"div",4),e(),t(20,"section")(21,"h2",5),n(22,"Variable Binding"),e(),t(23,"markdown"),n(24," Using component or directive with `data` property allow to bind a variable that will update the DOM when value changes "),e(),t(25,"div",6)(26,"mat-form-field",7)(27,"textarea",8),w("ngModelChange",function(g){return m.markdown=g}),e()(),o(28,"markdown",9),e(),t(29,"markdown"),n(30," Using `language` pipe you can specify the language of the variable content for synthax highlights "),e(),o(31,"markdown",2),e(),t(32,"section")(33,"h2",10),n(34,"Pipe Usage"),e(),t(35,"markdown"),n(36," Using `markdown` pipe to transform markdown to HTML allow you to chain pipe transformations and will update the DOM when value changes. It is important to note that, because the `marked` parsing method returns a `Promise`, it requires the use of the `async` pipe. "),e(),o(37,"markdown",2),t(38,"markdown"),n(39," In the following example using the synthax above, `typescriptMarkdown` property does not contain any `back-ticks` to set the content language but will be chain with `language` pipe instead to specify synthax highlights language along with `markdown` pipe for conversion "),e(),t(40,"div",6)(41,"mat-form-field",7)(42,"textarea",8),w("ngModelChange",function(g){return m.typescriptMarkdown=g}),e()(),o(43,"div",11),l(44,"async"),l(45,"markdown"),l(46,"language"),e()()()),r&2&&(i("headings",m.headings),a(8),i("src","app/bindings/remote/demo.md"),a(3),i("data",u(12,11,s(13,14,m.demoPython$),"python")),a(5),i("src","app/bindings/remote/demo.html"),a(3),i("src","app/bindings/remote/demo.cpp"),a(8),i("ngModel",m.markdown),a(1),i("data",m.markdown),a(3),i("src","app/bindings/remote/language-pipe.html"),a(6),i("src","app/bindings/remote/markdown-pipe.html"),a(5),i("ngModel",m.typescriptMarkdown),a(1),i("innerHTML",s(44,16,s(45,18,u(46,20,m.typescriptMarkdown,"typescript"))),y))},dependencies:[x,L,E,C,D,I,_,B,P,M,b,S,T,H,R,O,F],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:360px}"],changeDetection:0});let c=p;return c})();export{Z as default};
