import{a as _}from"./chunk-R3OWIIC4.js";import{a as b,b as S}from"./chunk-5MEH3AUT.js";import{a as F,b as I,c as U,d as H,f as R,g as T,h as O,i as W}from"./chunk-2AOCEGWT.js";import"./chunk-LI3L4VBM.js";import{a as E,b as P}from"./chunk-4AFKNOE3.js";import{Ab as x,Fa as o,Ka as t,La as e,Ma as r,aa as k,bb as n,eb as g,fb as h,gb as w,ha as v,ib as d,jb as s,kb as f,la as i,ma as c,ra as M,rc as C,sc as L,tc as D,wc as B}from"./chunk-L73B4PLA.js";var y=class u{constructor(l,m){this.elementRef=l;this.rawLoaderService=m;this.demoPython$=this.rawLoaderService.get("app/bindings/remote/demo.py");this.markdown='### Markdown example\n---\nThis is an **example** where we bind a variable to the `markdown` component that is also bound to a textarea.\n\n#### example.component.ts\n```typescript\npublic markdown = "# Markdown";\n```\n\n#### example.component.html\n```html\n<textarea [(ngModel)]="markdown"></textarea>\n<markdown [data]="markdown"></markdown>\n```';this.typescriptMarkdown=`import { Component } from '@angular/core';

@Component({
  selector: 'markdown-demo',
  templateUrl: './markdown-demo.component.html',
  styleUrls: ['./markdown-demo.component.scss'],
})
export class MarkdownDemoComponent {
  public pipeMarkdown = '# Markdown';
}`}ngOnInit(){this.setHeadings()}setHeadings(){let l=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach(m=>l.push(m)),this.headings=l}static{this.\u0275fac=function(m){return new(m||u)(c(k),c(_))}}static{this.\u0275cmp=M({type:u,selectors:[["app-bindings"]],decls:47,vars:23,consts:[[3,"headings"],["id","remote-url"],[3,"src"],[3,"data"],["markdown","",3,"src"],["id","variable-binding"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModelChange","ngModel"],["fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["id","pipe-usage"],["fxFlex.gt-sm","calc(50% - 8px)",3,"innerHTML"]],template:function(m,a){m&1&&(t(0,"app-scrollspy-nav-layout",0)(1,"h1"),n(2,"Bindings"),e(),t(3,"section")(4,"h2",1),n(5,"Remote Url"),e(),t(6,"markdown"),n(7," Using component with `src` property to fetch remote markdown file `app/bindings/remote/demo.md` "),e(),r(8,"markdown",2),t(9,"markdown"),n(10," Using component with static `python` code block "),e(),r(11,"markdown",3),d(12,"async"),d(13,"language"),t(14,"markdown"),n(15," Using directive with `src` property to fetch remote html file `app/bindings/remote/demo.html` "),e(),r(16,"div",4),t(17,"markdown"),n(18," Using directive with `src` property to fetch remote C++ file `app/bindings/remote/demo.cpp` "),e(),r(19,"div",4),e(),t(20,"section")(21,"h2",5),n(22,"Variable Binding"),e(),t(23,"markdown"),n(24," Using component or directive with `data` property allow to bind a variable that will update the DOM when value changes "),e(),t(25,"div",6)(26,"mat-form-field",7)(27,"textarea",8),w("ngModelChange",function(p){return h(a.markdown,p)||(a.markdown=p),p}),e()(),r(28,"markdown",9),e(),t(29,"markdown"),n(30," Using `language` pipe you can specify the language of the variable content for synthax highlights "),e(),r(31,"markdown",2),e(),t(32,"section")(33,"h2",10),n(34,"Pipe Usage"),e(),t(35,"markdown"),n(36," Using `markdown` pipe to transform markdown to HTML allow you to chain pipe transformations and will update the DOM when value changes. It is important to note that, because the `marked` parsing method returns a `Promise`, it requires the use of the `async` pipe. "),e(),r(37,"markdown",2),t(38,"markdown"),n(39," In the following example using the synthax above, `typescriptMarkdown` property does not contain any `back-ticks` to set the content language but will be chain with `language` pipe instead to specify synthax highlights language along with `markdown` pipe for conversion "),e(),t(40,"div",6)(41,"mat-form-field",7)(42,"textarea",8),w("ngModelChange",function(p){return h(a.typescriptMarkdown,p)||(a.typescriptMarkdown=p),p}),e()(),r(43,"div",11),d(44,"language"),d(45,"markdown"),d(46,"async"),e()()()),m&2&&(o("headings",a.headings),i(8),o("src","app/bindings/remote/demo.md"),i(3),o("data",f(13,13,s(12,11,a.demoPython$),"python")),i(5),o("src","app/bindings/remote/demo.html"),i(3),o("src","app/bindings/remote/demo.cpp"),i(8),g("ngModel",a.markdown),i(),o("data",a.markdown),i(3),o("src","app/bindings/remote/language-pipe.html"),i(6),o("src","app/bindings/remote/markdown-pipe.html"),i(5),g("ngModel",a.typescriptMarkdown),i(),o("innerHTML",s(46,21,s(45,19,f(44,16,a.typescriptMarkdown,"typescript"))),v))},dependencies:[x,B,C,L,D,H,F,I,U,b,E,S,T,R,W,O,P],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:360px}"],changeDetection:0})}};export{y as default};
